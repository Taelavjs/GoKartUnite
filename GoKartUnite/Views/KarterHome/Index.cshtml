
@{
	ViewData["Title"] = "Index";
}

@model GoKartUnite.ViewModel.KarterIndex
<h1>GoKartersHome</h1>
<div class="container">
	<!-- Profile Section -->
	<div class="profile-section">
	<div class="profile-header">
		<div class="profile-image"></div>
		<div class="profile-details">
		<div class="profile-name">@Model.karter.Name <a asp-action="EditUserDetails" class="btn btn-primary">Edit</a></div>
		<div class="profile-info">
			<div><label>Local Track:</label> @(Model.karter.Track == null ? "None" : Model.karter.Track.Title)</div>
			<div><label>Email:</label> @Model.karter.Email</div>
		</div>
		</div>
	</div>
	</div>

	<!-- Table Section -->
	<div class="table-section">
	<!-- Friends Table -->
	<div class="table-container">
		<table>
		<thead>
			<tr>
			<th></th>
			<th></th>
			<th>Friends</th>
			<th></th>
			<th></th>
			</tr>
		</thead>
		<tbody>
			@foreach(var friend in Model.karterFriends){
				@await Html.PartialAsync("karter", friend)
			}
		</tbody>
		</table>
	</div>

	<div class="table-container">
		<table>
		<thead>
			<tr>
			<th></th>
			<th></th>
			<th>Incoming Requests</th>
			<th></th>
			<th></th>
			</tr>
		</thead>
		<tbody>
			@foreach (var friend in Model.karterFriendRequests)
			{
				@await Html.PartialAsync("karter", friend)
			}
		</tbody>
		</table>
	</div>
	</div>

	<div class="table-container">
		<table>
		<thead>
			<tr>
			<th></th>
			<th></th>
			<th>Outgoing Requests</th>
			<th></th>
			<th></th>
			</tr>
		</thead>
		<tbody>
				@foreach (var friend in Model.sentFriendRequests)
				{
					@await Html.PartialAsync("karter", friend)
				}
		</tbody>
		</table>
	</div>
	</div>


	@await Html.PartialAsync("_CreateKarterStatTrack", new GoKartUnite.ViewModel.KarterStatAddPage
	{
		trackTitle = Model.trackTitles,
		statToBeCreated = new GoKartUnite.ViewModel.KarterTrackStatsViewModel()
	})

</div>
