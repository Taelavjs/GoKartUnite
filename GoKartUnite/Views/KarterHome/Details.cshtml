@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Details";
}
@using GoKartUnite.ViewModel
@using GoKartUnite.Models


@model IEnumerable<KarterView>
<div class="table-section">

    @{
        SortKartersBy nameSort = ViewBag.CurrentSort == SortKartersBy.Alphabetically ? SortKartersBy.ReverseAlphabetically : SortKartersBy.Alphabetically;
        SortKartersBy yearsSort = ViewBag.CurrentSort == SortKartersBy.YearsExperience ? SortKartersBy.ReverseYearsExperience : SortKartersBy.YearsExperience;


        }

<div class="table-container">
    <table >

        <thead>
            <th scope="col">Name
                <a class="page-link" href="?sortby=@(nameSort)&page=@(ViewBag.Page)@ViewContext.HttpContext.Request.Query">
                    Name
                </a>
            </th>
            <th scope="col">
                <a class="page-link" href="?sortby=@(yearsSort)&page=@(ViewBag.Page)@ViewContext.HttpContext.Request.Query">
                    Years Experience
                </a>
            </th>
            <th scope="col">Local Track</th>
            @if(User.IsInRole("Admin")){
                <th scope="col">Options</th>
                <th scope="col"></th>
            }
        </thead>
        <tbody>
            @foreach (var karterDb in Model)
            {
                @await Html.PartialAsync("karter", karterDb)
            }
        </tbody>
    </table>
</div></div>

@await Html.PartialAsync("~/Views/BlogHome/_Pagination.cshtml", new { Page = ViewBag.Page, TotalPages = ViewBag.TotalPages, QueryString = ViewContext.HttpContext.Request.Query })
